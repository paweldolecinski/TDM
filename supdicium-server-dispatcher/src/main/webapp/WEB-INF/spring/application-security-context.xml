<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.0.xsd">


	<!-- <http pattern="/favicon.ico" security="none" /> -->

	<http use-expressions="true" entry-point-ref="gaeEntryPoint"
		access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/logout.htm" access="permitAll" />
		<intercept-url pattern="/register.htm*" access="hasRole('NEW_USER')" />
		<intercept-url pattern="/**" access="hasRole('USER')" />
		<custom-filter position="PRE_AUTH_FILTER" ref="gaeFilter" />
	</http>

	<b:bean id="gaeEntryPoint"
		class="pl.dolecinski.supdicium.server.security.GoogleAccountsAuthenticationEntryPoint" />

	<b:bean id="gaeFilter"
		class="pl.dolecinski.supdicium.server.security.GaeAuthenticationFilter">
		<b:property name="authenticationManager" ref="authenticationManager" />
		<b:property name="failureHandler">
			<b:bean
				class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
				<b:property name="exceptionMappings">
					<b:map>
						<b:entry
							key="org.springframework.security.authentication.DisabledException"
							value="/disabled.htm" />
					</b:map>
				</b:property>
			</b:bean>
		</b:property>
	</b:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="gaeAuthenticationProvider" />
	</authentication-manager>

	<b:bean id="gaeAuthenticationProvider"
		class="pl.dolecinski.supdicium.server.security.GoogleAccountsAuthenticationProvider">
		<b:property name="userRegistry" ref="userRegistry" />
	</b:bean>

	<b:bean id="userRegistry"
		class="pl.dolecinski.supdicium.server.users.GaeDatastoreUserRegistry" />

	<!-- Define custom Voter -->
	<b:bean id="suspendVoter"
		class="pl.dolecinski.supdicium.server.security.SuspendRealTimeVoter" />

	<!-- Define AccessDesisionManager as UnanimousBased -->
	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<b:property name="decisionVoters">
			<b:list>
				<b:ref bean="suspendVoter" />
				<b:bean class="org.springframework.security.access.vote.RoleVoter" />
				<b:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</b:list>
		</b:property>
	</b:bean>
</b:beans>
